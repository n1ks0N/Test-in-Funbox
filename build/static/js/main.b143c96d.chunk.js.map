{"version":3,"sources":["bg.png","bgDis.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","info","default","style","color","borderColor","backgroundImage","bg","backgroundColor","circle","background","text","appText","span","upTitle","defaultHover","selected","selectedHover","disabled","bgDis","first","sec","useState","id","state","name","weight","subText","states","setStates","changeState","prev","map","data","Number","console","log","className","onClick","e","target","onMouseLeave","mouseEffect","constructor","Array","join","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b143c96d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.47fbcd48.png\";","module.exports = __webpack_public_path__ + \"static/media/bgDis.c4a01228.png\";","import React, { useState } from 'react'\nimport './App.css'\nimport bg from './bg.png'\nimport bgDis from './bgDis.png'\n\nfunction App() {\n\n  const info = {\n    default: {\n      style: {\n        color: '#000',\n        borderColor: '#1698D9',\n        backgroundImage: `url(${bg})`,\n        backgroundColor: '#F2F2F2',\n        circle: {\n          background: '#1698D9'\n        },\n      },\n      text: {\n        appText: {\n          text: `Чего сидишь? Порадуй котэ,`,\n          span: `купи.`\n        },\n        upTitle: {\n          text: 'Сказочное заморское яство',\n          color: '#666666'\n        },\n        text: {\n          color: '#666666'\n        },\n        color: '#FFFFFF'\n      }\n    },\n    defaultHover: {\n      style: {\n        color: '#000',\n        borderColor: '#2EA8E6',\n        backgroundColor: '#F2F2F2',\n        backgroundImage: `url(${bg})`,\n        circle: {\n          background: '#2EA8E6'\n        }\n      },\n      text: {\n        appText: {\n          text: `Чего сидишь? Порадуй котэ,`,\n          span: `купи.`\n        },\n        upTitle: {\n          text: 'Сказочное заморское яство',\n          color: '#666666'\n        },\n        text: {\n          color: '#666666'\n        },\n        color: '#FFFFFF'\n      }\n    },\n    selected: {\n      style: {\n        color: '#000',\n        borderColor: '#D91667',\n        backgroundColor: '#F2F2F2',\n        backgroundImage: `url(${bg})`,\n        circle: {\n          background: '#D91667'\n        }\n      },\n      text: {\n        appText: [['Печень утки разварная с артишоками.'], 'Головы щучьи с чесноком да свежайшая сёмгушка.', 'Филе из цыплят с трюфелями в бульоне.'],\n        color: '#FFFFFF',\n        upTitle: {\n          text: 'Сказочное заморское яство',\n          color: '#666666'\n        },\n        text: {\n          color: '#666666'\n        }\n      }\n    },\n    selectedHover: {\n      style: {\n        color: '#000',\n        borderColor: '#E62E7A',\n        backgroundColor: '#F2F2F2',\n        backgroundImage: `url(${bg})`,\n        circle: {\n          background: '#E62E7A'\n        }\n      },\n      text: {\n        appText: ['Печень утки разварная с артишоками.', 'Головы щучьи с чесноком да свежайшая сёмгушка.', 'Филе из цыплят с трюфелями в бульоне.'],\n        color: '#FFFFFF',\n        upTitle: {\n          text: 'Котэ не одобряет?',\n          color: '#E62E7A'\n        },\n        text: {\n          color: '#666666'\n        }\n      }\n    },\n    disabled: {\n      style: {\n        color: '#D3D3D3',\n        borderColor: '#B3B3B3',\n        backgroundColor: '#F2F2F2',\n        backgroundImage: `url(${bgDis})`,\n        circle: {\n          background: '#B3B3B3'\n        },\n        text: {\n          color: '#D3D3D3'\n        }\n      },\n      text: {\n        appText: {\n          first: 'Печалька,',\n          sec: 'закончился.'\n        },\n        upTitle: {\n          text: 'Сказочное заморское яство',\n          color: '#D3D3D3'\n        },\n        text: {\n          color: '#666666'\n        },\n        color: '#FFFF66'\n      }\n    }\n  }\n\n  const [states, setStates] = useState([\n    { id: 1, state: 0, name: 'с фуа-гра', weight: '0,5', subText: '10 порций мышь в подарок', text: [info.default.text.appText.text, info.default.text.appText.span], info: info.default },\n    { id: 2, state: 0, name: 'с рыбой', weight: '2', subText: '40 порций 2 мыши в подарок', text: [info.default.text.appText.text, info.default.text.appText.span], info: info.default },\n    { id: 3, state: 0, name: 'с курицей', weight: '5', subText: '100 порций 5 мышей в подарок заказчик доволен', text: [info.default.text.appText.text, info.default.text.appText.span], info: info.default }\n  ])\n\n  const mouseEffect = ({ id }) => {\n    setStates(prev => (\n      prev.map(data => {\n        if ((data.id === Number(id)) && (data.state !== 2)) {\n          switch (data.state) {\n            case 0:\n              return ({ ...data, info: info.defaultHover })\n            case 1:\n              return ({ ...data, info: info.selectedHover })\n            default:\n              return data\n          }\n        }\n        return data\n      })\n    ))\n  }\n\n  const changeState = ({ id }) => {\n    setStates(prev => (\n      prev.map(data => {\n        if (data.id === Number(id)) { // выборка нужного объекта, из state\n          switch (data.state) { // в switch смена state у карточки\n            case 0:\n              return ({ ...data, state: 1, text: info.selected.text.appText[id - 1], info: info.selected })\n            case 1:\n              return ({ ...data, state: 2, text: [info.disabled.text.appText.first, info.disabled.text.appText.sec], info: info.disabled })\n            case 2:\n              return ({ ...data, state: 0, text: [info.default.text.appText.text, info.default.text.appText.span], info: info.default })\n            default:\n              return data\n          }\n        }\n        return data\n      })\n    ))\n  }\n\n  console.log('render')\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app__title\" >Ты сегодня покормил кота?</h1>\n      <div className=\"row\">\n        {states.map(data => (\n          <div>\n            <div className='card' style={data.info.style} id={data.id} onClick={e => changeState(e.target)} onMouseLeave={e => mouseEffect(e.target)}>\n              <p className=\"card__uptitle\" style={data.info.text.upTitle} id={data.id}>{data.info.text.upTitle.text}</p>\n              <h2 className=\"card__title\" id={data.id}>Нямушка<br /><span>{data.name}</span></h2>\n              <p className=\"card__text\" id={data.id} style={data.info.style.text}>{data.subText}</p>\n              <div className=\"card__circle\" style={data.info.style.circle} id={data.id}><p id={data.id}>{data.weight}<br /><span id={data.id}>кг</span></p></div>\n            </div>\n            <p className=\"app__text\" style={data.info.text} id={data.id}>{data.text.constructor === Array ? (data.state === 0 ? data.text[0] : data.text.join(' ' + data.name + ' ')) : data.text} <span id={data.id} onClick={e => changeState(e.target)}>{data.text[1] === `купи.` ? data.text[1] : null}</span></p>\n            {/* если text является массивом, то объеденить в строку, (в зависимости от state, разная конкатенация); иначе вывести одну строку */}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}